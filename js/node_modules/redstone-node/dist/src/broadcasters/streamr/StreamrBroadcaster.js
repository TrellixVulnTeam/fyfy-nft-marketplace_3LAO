"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamrBroadcaster = void 0;
var lodash_1 = __importDefault(require("lodash"));
var StreamrProxy_1 = require("./StreamrProxy");
var logger = require("../../utils/logger")("StreamrBroadcaster");
var STREAMR_BROADCASTING_INTERVAL_MILLISECONDS = 3000;
var PACKAGE_STREAM_NAME = "package";
var PRICES_STREAM_NAME = "prices";
var StreamrBroadcaster = /** @class */ (function () {
    function StreamrBroadcaster(ethereumPrivateKey) {
        this.pricesToBroadcast = [];
        this.streamrProxy = new StreamrProxy_1.StreamrProxy(ethereumPrivateKey);
        this.streamrProxy.tryCreateStream(PACKAGE_STREAM_NAME);
        this.streamrProxy.tryCreateStream(PRICES_STREAM_NAME);
        this.lazyEnableTimer();
    }
    StreamrBroadcaster.prototype.lazyEnableTimer = function () {
        var haveDataToBroadcast = this.packageToBroadcast
            || this.pricesToBroadcast.length > 0;
        if (!this.timer && haveDataToBroadcast) {
            this.timer = setInterval(this.broadcastInternal.bind(this), STREAMR_BROADCASTING_INTERVAL_MILLISECONDS);
        }
    };
    StreamrBroadcaster.prototype.broadcastInternal = function () {
        return __awaiter(this, void 0, void 0, function () {
            var promises, data, streamName, data, streamName;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        promises = [];
                        if (this.pricesToBroadcast.length > 0) {
                            data = this.pricesToBroadcast;
                            streamName = PRICES_STREAM_NAME;
                            logger.info("Broadcasting prices to streamr");
                            promises.push(this.streamrProxy.publishToStreamByName(data, streamName));
                        }
                        if (this.packageToBroadcast) {
                            data = this.packageToBroadcast;
                            streamName = PACKAGE_STREAM_NAME;
                            logger.info("Broadcasting package to streamr");
                            promises.push(this.streamrProxy.publishToStreamByName(data, streamName));
                        }
                        return [4 /*yield*/, Promise.all(promises)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    StreamrBroadcaster.prototype.broadcast = function (prices) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.pricesToBroadcast = prices.map(function (p) { return lodash_1.default.omit(p, ["source"]); });
                this.lazyEnableTimer();
                return [2 /*return*/];
            });
        });
    };
    StreamrBroadcaster.prototype.broadcastPricePackage = function (signedData, _providerAddress) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.packageToBroadcast = signedData;
                this.lazyEnableTimer();
                return [2 /*return*/];
            });
        });
    };
    return StreamrBroadcaster;
}());
exports.StreamrBroadcaster = StreamrBroadcaster;
